{"version":3,"file":"static/js/762.ab0b4c41.chunk.js","mappings":"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","sources":["redux/contacts/selectors.js","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","components/Form/Form.styled.js","components/Form/Form.jsx","components/ContactsBox/ContactsBox.styled.js","components/ContactsBox/ContactsBox.jsx","pages/Contacts/Contacts.styled.js","pages/Contacts/Contacts.jsx"],"sourcesContent":["export const selectContacts = state => state.contacts;\nexport const selectFilter = state => state.filter.value;","import styled from 'styled-components';\n\nexport const FilterBox = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const Label = styled.label`\n  font-size: 18px;\n  font-weight: 500;\n  margin-top: 15px;\n`;\n\nexport const Input = styled.input`\n  width: 250px;\n  font-size: 15px;\n  margin-top: 10px;\n  margin-bottom: 25px;\n  margin-left: auto;\n  margin-right: auto;\n  padding: 5px;\n  border: 1px solid #888;\n  border-radius: 5px;\n  &:focus-visible {\n    outline: 2px solid purple;\n  }\n`;","import { useDispatch, useSelector } from 'react-redux';\nimport { setFilter } from 'redux/contacts/sliceFilter';\nimport { selectFilter } from 'redux/contacts/selectors';\nimport { FilterBox, Label, Input } from './Filter.styled';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(selectFilter);\n\n  const handleChange = evt => {\n    dispatch(setFilter(evt.currentTarget.value));\n  };\n\n  return (\n    <FilterBox>\n      <Label htmlFor=\"filter\">Find contacts by name</Label>\n      <Input id=\"filter\" type=\"text\" value={filter} onChange={handleChange} />\n    </FilterBox>\n  );\n};","import styled from 'styled-components';\n\nexport const FormBox = styled.form`\n  width: auto;\n  margin-top: 10px;\n  margin-bottom: 40px;\n  padding: 20px;\n  display: flex;\n  flex-direction: column;\n  border: 1px solid #333;\n  border-radius: 5px;\n  background-color: #f9eef3;\n`;\n\nexport const Label = styled.label`\n  font-weight: 500;\n`;\n\nexport const Input = styled.input`\n  font-size: 18px;\n  margin-top: 5px;\n  margin-bottom: 15px;\n  padding: 5px;\n  border: 1px solid #888;\n  border-radius: 5px;\n  &:focus-visible {\n    outline: 2px solid purple;\n  }\n`;\n\nexport const SubmitBtn = styled.button`\n  width: 120px;\n  margin-left: auto;\n  margin-right: auto;\n  margin-top: 20px;\n  padding: 5px 10px;\n  font-size: 15px;\n  font-weight: 600;\n  border-radius: 5px;\n  border: 1px solid #888;\n  background-color: #fff;\n  box-shadow: 1px 2px 4px 1px #B7B7B7;\n  color: #333;\n  cursor: pointer;\n  transition: background-color 200ms linear, color 200ms linear;\n  &:hover {\n    background-color: purple;\n    color: #eee;\n  }\n`;","// import { nanoid } from 'nanoid';\nimport { FormBox, Label, Input, SubmitBtn } from './Form.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContacts } from 'redux/contacts/operations';\nimport { selectContacts } from 'redux/contacts/selectors';\n\nexport const Form = () => {\n  const dispatch = useDispatch();\n  const { items } = useSelector(selectContacts);\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    const form = evt.target;\n    \n    if (items && items.length > 0) {\n      items.forEach(({ name }) => {\n        if (form.elements.name.value.toLowerCase() === name.toLowerCase()) {\n          alert(`${name} is already in contacts`);\n          form.reset();\n          return;\n        }      \n      });      \n    }\n    if (form.elements.name.value === \"\") {\n      return;\n    } else { \n    dispatch(\n      addContacts({\n        name: form.elements.name.value,\n        number: form.elements.number.value,\n      })\n    );\n    form.reset();\n    }\n  };\n\n  return (\n    <FormBox action=\"\" onSubmit={handleSubmit}>\n      <Label htmlFor=\"name\">Name</Label>\n      <Input\n        id=\"name\"\n        type=\"text\"\n        name=\"name\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        required\n      />\n\n      <Label htmlFor=\"tel\">Number</Label>\n      <Input\n        id=\"tel\"\n        type=\"tel\"\n        name=\"number\"\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n        required\n      />\n\n      <SubmitBtn type=\"submit\">Add contact</SubmitBtn>\n    </FormBox>\n  );\n};","import styled from 'styled-components';\n\nexport const ContactList = styled.ul``;\n\nexport const ContactListItem = styled.li`\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: 10px;\n`;\n\nexport const ContactName = styled.p`\n  margin-right: 15px;\n  font-weight: 600;\n`;\n\nexport const ContactNumber = styled.p`\n  margin-right: 40px;\n  margin-left: auto;\n`;\n\nexport const DeleteButton = styled.button`\n  // height: 26px;\n  padding: 4px 10px;\n  font-size: 15px;\n  font-weight: 600;\n  border-radius: 5px;\n  border: 1px solid #888;\n  background-color: #fff;\n  box-shadow: 1px 0px 4px 1px #B7B7B7;\n  color: #333;\n  cursor: pointer;\n  transition: background-color 200ms linear, color 200ms linear;\n  &:hover {\n    background-color: purple;\n    color: #eee;\n  }\n`;","import { useDispatch, useSelector } from 'react-redux';\nimport { useEffect } from 'react';\nimport {\n  fetchContacts,\n  deleteContacts,\n  filterContacts,\n} from 'redux/contacts/operations';\nimport { selectContacts, selectFilter } from 'redux/contacts/selectors';\nimport { Loader } from 'components/Loader/Loader';\nimport {\n  ContactList,\n  ContactListItem,\n  ContactName,\n  ContactNumber,\n  DeleteButton,\n} from './ContactsBox.styled';\n\nexport const ContactsBox = () => {\n  const { items, isLoading, error } = useSelector(selectContacts);\n  const dispatch = useDispatch();\n\n  const filter = useSelector(selectFilter);\n\n  useEffect(() => {\n    if (filter === '') {\n      dispatch(fetchContacts());\n    } else {\n      dispatch(filterContacts(filter.toLowerCase()));\n    }\n  }, [dispatch, filter]);\n  \n  const handleOnClick = evt => {\n    dispatch(deleteContacts(evt.currentTarget.id));\n  };\n\n  return (\n    <ContactList>\n      {isLoading && <Loader/>}\n      {error && <b>{error}</b>}\n      {items.map(el => {\n        const { name, number, id } = el;\n        return (\n          <ContactListItem key={id}>\n            <ContactName>{name}</ContactName>\n            <ContactNumber>{number}</ContactNumber>\n            <DeleteButton id={id} type=\"button\" onClick={handleOnClick}>\n              Delete\n            </DeleteButton>\n          </ContactListItem>\n        );\n      })}\n    </ContactList>\n  );\n};\n\n","import styled from 'styled-components';\n\n\nexport const ContactsWrap = styled.div`\n  max-width: 1200px;\n  margin-left: auto;\n  margin-right: auto;\n  text-align: center;\n  border-radius: 5px;\n  box-shadow: 1px 1px 5px 4px rgba(0,0,0,0.12);\n  background-image: linear-gradient(\n      to bottom,\n      #fff 20%,\n      #e5c7d5\n    );\n`\nexport const ContactsPage = styled.div`\n  width: 500px;\n  margin-left: auto;\n  margin-right: auto;\n  text-align: center;\n  padding: 60px 10px;\n` \nexport const PhoneBookTitle = styled.h2`\n  color: #444;\n`\nexport const ContactsTitle = styled.h2`\n  color: #444;\n`","import {Filter} from 'components/Filter/Filter';\nimport {Form} from 'components/Form/Form';\nimport {ContactsBox} from 'components/ContactsBox/ContactsBox';\nimport {\n    ContactsPage,\n    PhoneBookTitle,\n    ContactsTitle,\n    ContactsWrap,\n  } from './Contacts.styled';\n\n\nexport default function Contacts() {\n  console.log('ContactsPage');\n  return (\n    <ContactsWrap>\n      <ContactsPage>\n        <PhoneBookTitle>\n          Phonebook\n        </PhoneBookTitle>\n        <Form />\n\n        <ContactsTitle>\n          Contacts\n        </ContactsTitle>\n        <Filter />\n        <ContactsBox />\n      </ContactsPage>\n    </ContactsWrap>\n  );\n}"],"names":["selectContacts","state","contacts","selectFilter","filter","value","FilterBox","styled","Label","Input","Filter","dispatch","useDispatch","useSelector","htmlFor","id","type","onChange","evt","setFilter","currentTarget","FormBox","SubmitBtn","Form","items","action","onSubmit","preventDefault","form","target","length","forEach","name","elements","toLowerCase","alert","reset","addContacts","number","pattern","title","required","ContactList","ContactListItem","ContactName","ContactNumber","DeleteButton","ContactsBox","isLoading","error","useEffect","fetchContacts","filterContacts","handleOnClick","deleteContacts","Loader","map","el","onClick","ContactsWrap","ContactsPage","PhoneBookTitle","ContactsTitle","Contacts","console","log"],"sourceRoot":""}