{"version":3,"file":"static/js/386.414f1fb5.chunk.js","mappings":"6OAIaA,EAAgBC,EAAAA,GAAAA,IAAH,kHAMbC,EAAiBD,EAAAA,GAAAA,GAAH,4CAIdE,EAAeF,EAAAA,GAAAA,KAAH,0GAMZG,EAAQH,EAAAA,GAAAA,MAAH,2GAOLI,EAAQJ,EAAAA,GAAAA,MAAH,sLAWLK,EAAYL,EAAAA,GAAAA,OAAH,ibAmBTM,EAAUN,EAAAA,GAAAA,IAAH,wFAMPO,GAAUP,EAAAA,EAAAA,IAAOQ,EAAAA,GAAPR,CAAH,0C,6BCxDPS,EAAY,WACvB,IAAMC,GAAWC,EAAAA,EAAAA,MAuBjB,OACE,UAACZ,EAAD,YACE,SAACE,EAAD,qBACA,UAACC,EAAD,CACEU,UAAU,OACVC,SA1Be,SAAAC,GACnBA,EAAEC,iBACF,IAAMC,EAAOF,EAAEG,cACTC,EAAQF,EAAKG,SAASD,MAAME,MAC5BC,EAAWL,EAAKG,SAASE,SAASD,MAC1B,KAAVF,GAA6B,KAAbG,GAIpBX,GACEY,EAAAA,EAAAA,IAAM,CACJJ,MAAAA,EACAG,SAAAA,KAIJL,EAAKO,SAVHb,GAASa,EAAAA,EAAAA,IAAM,gCAWlB,EAUKC,aAAa,MAHf,WAKE,SAACrB,EAAD,CAAOsB,QAAQ,QAAf,oBACA,SAACrB,EAAD,CAAOsB,KAAK,QACVC,KAAK,QACLC,MAAM,QACNC,YAAY,YAGd,SAAC1B,EAAD,CAAOsB,QAAQ,WAAf,uBACA,SAACrB,EAAD,CACEsB,KAAK,WACLC,KAAK,WACLC,MAAM,WACNC,YAAY,cAGd,SAACxB,EAAD,CAAWqB,KAAK,SAAhB,wBAEF,UAACpB,EAAD,kBACK,SAACC,EAAD,CAASuB,GAAG,uCAAZ,+BAIV,E,UC3DYC,EAAY/B,EAAAA,GAAAA,IAAH,6RCIP,SAASgC,IACtB,IAAMtB,GAAWC,EAAAA,EAAAA,MACXsB,GAAQC,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMC,KAAKH,KAAf,IAY/B,OAVAI,EAAAA,EAAAA,YAAU,WACR3B,GAASa,EAAAA,EAAAA,MACV,GAAE,CAACb,IAEAuB,GACFK,YAAW,WACT5B,GAASa,EAAAA,EAAAA,MACV,GAAE,KAELgB,QAAQC,IAAI,cAEV,UAACT,EAAD,WACGE,GACCQ,MAAM,GAAD,OAAIR,EAAJ,6BAKP,SAACxB,EAAD,MAGL,C","sources":["components/LoginForm/LoginForm.styled.js","components/LoginForm/LoginForm.jsx","pages/Login/Login.styled.js","pages/Login/Login.jsx"],"sourcesContent":["import styled from \"styled-components\";\nimport { Link } from 'react-router-dom';\n\n\nexport const LoginFormWrap = styled.div`\n  max-width: 1200px;\n  margin-left: auto;\n  margin-right: auto;\n  text-align: center;\n`\nexport const LoginFormTitle = styled.h2`\n  margin-top: 0px;\n`\n\nexport const LoginFormBox = styled.form`\n  display: block;\n  max-width: 400px;\n  margin: 0 auto;\n  text-align: center;\n`\nexport const Label = styled.label`\n  font-weight: 500;\n  margin-top: 30px;\n  display: block;\n  text-align: start;\n`\n\nexport const Input = styled.input`\nmargin-top: 30px;\nheight: 40px;\nfont-size: 18px;\nwidth: 100%;\nborder-radius: 5px;\nborder: 1px solid #999;\n&:focus {\n    outline: 2px solid purple;\n}\n`\nexport const SubmitBtn = styled.button`\n  margin-top: 40px;\n  height: 40px;\n  width: 200px;\n  font-size: 18px;\n  color: #000;\n  border: 1px solid #aaa;\n  border-radius: 5px;\n  background-color: #e5c7d5;\n  box-shadow: 1px 2px 4px 1px #B7B7B7;\n  transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1),\n  color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n    &.active,\n    :hover {\n      color: white;\n      background-color: purple;\n`\n\nexport const RegLink = styled.div`\n  margin-top: 30px;\n  font-size: 18px;\n  text-align: center;\n`;\n\nexport const LinkReg = styled(Link)`\n  color: purple;\n`\n\n","import { LoginFormWrap, LoginFormBox, Input, SubmitBtn, RegLink, LinkReg,\n  LoginFormTitle, Label } from './LoginForm.styled';\nimport { useDispatch } from 'react-redux';\nimport { logIn, reset } from 'redux/auth/operations';\n// import { Link } from 'react-router-dom';\n// import { Container } from '../Container.styled';\n\nexport const LoginForm = () => {\n  const dispatch = useDispatch();\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const form = e.currentTarget;\n    const email = form.elements.email.value;\n    const password = form.elements.password.value;\n    if (email === '' || password === '') {\n      dispatch(reset('All fields must be write in.'));\n      return;\n    }\n    dispatch(\n      logIn({\n        email,\n        password,\n      })\n    );\n    // console.log('LoginFormReset');\n    form.reset();\n  };\n\n  // console.log('LoginFormComponent ');\n\n  return (\n    <LoginFormWrap>\n      <LoginFormTitle>Login</LoginFormTitle>\n      <LoginFormBox\n        component=\"form\"\n        onSubmit={handleSubmit}\n        autoComplete=\"off\"\n      >\n        <Label htmlFor=\"email\">Email</Label>\n        <Input type=\"email\" \n          name=\"email\" \n          label=\"Email\"\n          placeholder=\"E-mail\"\n        \n          />\n        <Label htmlFor=\"password\">Password</Label> \n        <Input\n          type=\"password\"\n          name=\"password\"\n          label=\"Password\"\n          placeholder=\"Password\"\n        />\n\n        <SubmitBtn type=\"submit\">Log In</SubmitBtn>\n      </LoginFormBox>\n      <RegLink>\n        Or <LinkReg to=\"/goit-react-hw-08-phonebook/register\">register now</LinkReg>\n      </RegLink>\n  </LoginFormWrap>\n  );\n};","import styled from 'styled-components';\n\nexport const LoginPage = styled.div`\nmax-width: 1200px;\nmargin-left: auto;\nmargin-right: auto;\nborder-radius: 5px;\npadding-bottom: 60px;\npadding-top: 60px;\nbox-shadow: 1px 1px 5px 4px rgba(0,0,0,0.12);\n \nbackground-image: linear-gradient(\n    to bottom,\n    #fff 20%,\n    #e5c7d5\n  );\n` \n// export const LoginTitle = styled.h2`\n// `","import {LoginForm} from 'components/LoginForm/LoginForm';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { reset } from 'redux/auth/operations';\nimport { useEffect } from 'react';\nimport {LoginPage} from './Login.styled';\n\nexport default function Login() {\n  const dispatch = useDispatch();\n  const error = useSelector(state => state.auth.error);\n\n  useEffect(() => {\n    dispatch(reset());\n  }, [dispatch]);\n\n  if (error) {\n    setTimeout(() => {\n      dispatch(reset());\n    }, 5000);\n  }\n  console.log('LoginPage');\n  return (\n    <LoginPage>\n      {error && (\n        alert(`${error} Can not login the user`) \n      )}\n      {/* <LoginTitle>\n        Login\n      </LoginTitle> */}\n      <LoginForm />\n    </LoginPage>\n  );\n}"],"names":["LoginFormWrap","styled","LoginFormTitle","LoginFormBox","Label","Input","SubmitBtn","RegLink","LinkReg","Link","LoginForm","dispatch","useDispatch","component","onSubmit","e","preventDefault","form","currentTarget","email","elements","value","password","logIn","reset","autoComplete","htmlFor","type","name","label","placeholder","to","LoginPage","Login","error","useSelector","state","auth","useEffect","setTimeout","console","log","alert"],"sourceRoot":""}